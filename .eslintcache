[{"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\index.js":"1","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\App.js":"2","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\reportWebVitals.js":"3","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\store.js":"4","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\reducers\\rootReducer.js":"5","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Reducers\\rootReducer.js":"6","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Reducers\\soundReducer.js":"7","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\key\\index.js":"8","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Actions\\soundActions.js":"9","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Tools\\safeStringify.js":"10","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\sounds\\index.js":"11","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\Key\\index.js":"12","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\Sounds\\index.js":"13"},{"size":584,"mtime":1609624153128,"results":"14","hashOfConfig":"15"},{"size":1057,"mtime":1609688817443,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608667241340,"results":"17","hashOfConfig":"15"},{"size":297,"mtime":1609624148710,"results":"18","hashOfConfig":"15"},{"size":149,"mtime":1608752197464,"results":"19","hashOfConfig":"15"},{"size":140,"mtime":1609682625616,"results":"20","hashOfConfig":"15"},{"size":1150,"mtime":1609682625618,"results":"21","hashOfConfig":"15"},{"size":1667,"mtime":1609622545778,"results":"22","hashOfConfig":"15"},{"size":334,"mtime":1609608202852,"results":"23","hashOfConfig":"15"},{"size":4580,"mtime":1609606410333,"results":"24","hashOfConfig":"15"},{"size":1601,"mtime":1609620917743,"results":"25","hashOfConfig":"15"},{"size":2097,"mtime":1609685327250,"results":"26","hashOfConfig":"15"},{"size":3047,"mtime":1609689384754,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12z0rpr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\index.js",[],["60","61"],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\App.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\reportWebVitals.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\store.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\reducers\\rootReducer.js",[],["62","63"],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Reducers\\rootReducer.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Reducers\\soundReducer.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\key\\index.js",[],["64","65"],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Actions\\soundActions.js",[],["66","67"],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Tools\\safeStringify.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\sounds\\index.js",["68"],"\r\n\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { playSound } from '../../Actions/soundActions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state.soundReducer\r\n })\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n    playSound: (keyCode) => dispatch(playSound(keyCode))\r\n })\r\n\r\n class SoundPlayer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount () {\r\n        this.playSoundComponent = this.playSoundComponent.bind(this)\r\n        document.body.addEventListener('keypress', this.playSoundComponent);\r\n    }\r\n\r\n    keyCodePlayingIndex = {};\r\n\r\n    playSoundComponent(key){\r\n        if(this.props.allSounds.hasOwnProperty(key.code)){\r\n\r\n            if(!this.keyCodePlayingIndex.hasOwnProperty(key.code))\r\n                this.keyCodePlayingIndex[key.code] = 0\r\n\r\n            this.props.allSounds[key.code].players[this.keyCodePlayingIndex[key.code]].play()\r\n\r\n            this.keyCodePlayingIndex[key.code] = this.keyCodePlayingIndex[key.code] + 1 >= this.props.allSounds[key.code].players.length ? 0 : this.keyCodePlayingIndex[key.code] + 1\r\n            console.log(this.keyCodePlayingIndex[key.code])\r\n        }\r\n\r\n        this.props.playSound(key.code);\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            <h1 >Played : {this.props.playedKey}</h1>\r\n            {Object.keys(this.keyCodePlayingIndex).map(key =>{\r\n                return <p>{key} : {this.keyCodePlayingIndex[key]}</p>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SoundPlayer);","C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\Key\\index.js",[],"C:\\Users\\Alexa\\Documents\\Projects\\my-custom-soundboard\\src\\Components\\Sounds\\index.js",["69"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { playSound } from '../../Actions/soundActions';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ...state.soundReducer\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    playSound: (keyCode) => dispatch(playSound(keyCode))\r\n})\r\n\r\nclass SoundPlayer extends React.Component {\r\n    displayWarning;\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.displayWarning = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //prepare the playsound event\r\n        this.playSoundComponent = this.playSoundComponent.bind(this);\r\n        this.bindMidiDevices = this.bindMidiDevices.bind(this);\r\n\r\n        document.body.addEventListener('keypress', (key)=>{this.playSoundComponent(key.code)});\r\n\r\n        //prepare Midi access\r\n        if(navigator.requestMIDIAccess){\r\n            navigator.requestMIDIAccess()\r\n                .then(this.onMIDISuccess.bind(this), onMIDIFailure);\r\n        }else{\r\n            this.displayWarning = true\r\n        }\r\n\r\n        function onMIDIFailure() {\r\n            alert('Could not access your MIDI devices.');\r\n        }\r\n    }\r\n\r\n    onMIDISuccess(midiAccess) {\r\n        this.bindMidiDevices(midiAccess)\r\n\r\n        midiAccess.onstatechange = ()=>{\r\n            this.bindMidiDevices(midiAccess)\r\n        }\r\n    }\r\n\r\n    bindMidiDevices (midiAccess){\r\n        console.log(midiAccess);\r\n\r\n        var inputs = midiAccess.inputs;\r\n\r\n        inputs.forEach(device => {\r\n            console.log('Connecting to device', device);\r\n            device.onmidimessage = this.playMidiSound.bind(this)\r\n        })\r\n    }\r\n\r\n    playMidiSound = (m)=>{\r\n        console.log(m)\r\n        const [command, key, velocity] = m.data;\r\n\r\n        //129 is key down\r\n        if (command === 144 || command === 137) {\r\n            this.playSoundComponent(m.currentTarget.name.split(' ')[0] + key)\r\n        }\r\n    }\r\n\r\n    keyCodePlayingIndex = {};\r\n\r\n    playSoundComponent(key) {\r\n        if (this.props.allSounds.hasOwnProperty(key)) {\r\n\r\n            if (!this.keyCodePlayingIndex.hasOwnProperty(key))\r\n                this.keyCodePlayingIndex[key] = 0\r\n\r\n            this.props.allSounds[key].players[this.keyCodePlayingIndex[key]].play()\r\n\r\n            this.keyCodePlayingIndex[key] = this.keyCodePlayingIndex[key] + 1 >= this.props.allSounds[key].players.length ? 0 : this.keyCodePlayingIndex[key] + 1\r\n            console.log(this.keyCodePlayingIndex[key])\r\n        }\r\n\r\n        this.props.playSound(key);\r\n    }\r\n\r\n    warningStyle = {\r\n        display : \"block\",\r\n        position : \"absolute\",\r\n        top : \"5px\",\r\n        right : \"5px\",\r\n        padding : \"5px\",\r\n        backgroundColor : \"lightcoral\"\r\n    }\r\n\r\n    render() {\r\n        return !this.displayWarning ? \"\" : (<p style={this.warningStyle}> You can't use a midi device on a not secure site, please use the <a href={window.location.href.replace('http://','https://')}>secure site (https://)</a> </p>)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SoundPlayer);",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"70","replacedBy":"76"},{"ruleId":"72","replacedBy":"77"},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":18,"column":5,"nodeType":"82","messageId":"83","endLine":20,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":64,"column":30,"nodeType":"86","messageId":"87","endLine":64,"endColumn":38},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],["88"],["89"],["88"],["89"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'velocity' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]